% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
% Created Mon Feb 23 20:52:04 WET 2015
%
% This script assumes these variables are defined:
%
%   inputs - input data.
%   outputs - target data.

inputs = inputs;
targets = outputs;

% Create a Fitting Network
hiddenLayerSize = 10;
net = fitnet(hiddenLayerSize);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

net.trainParam.showWindow=0; %default is 1
%net.performFcn = 'mse'
%net.performFcn = 'crossentropy'
% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
%errors = gsubtract(targets,outputs);
%performance = perform(net,targets,outputs)
performance_crossentropy = crossentropy(net,targets,outputs)

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotfit(net,inputs,targets)
%figure, plotregression(targets,outputs)
%figure, ploterrhist(errors)
